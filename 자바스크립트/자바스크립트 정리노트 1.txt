1. console.log()
- 콘솔 로그를 찍는 함수


※ 변수
1) 변수는 문자와 숫자, $와 _만 사용
2) 첫글자는 숫자 사용 불가
3) 예약어 (클래스명, 함수명 등)은 사용할 수 없다
4) 가급적 상수는 대문자로 알려주어라 		EX) const MAX_SIZE = 99;
5) 변수명은 읽기 쉽고 이해할 수 있게 선언		EX) let userNumber = 3;

※ 변수 선언 키워드
1) var : 선언과 동시에 초기화를 하여 기본값으로 undefined가 들어간다.
- 변수에 값을 할당해줄 수도 있음. 		EX) var jso ='hello';

2) let : 변수 중복 선언이 불가능하다.
- 값 재할당은 가능하다.				
EX) 	let name : 'jso';
	let name : 'kmj'; 	X(중복선언 불가능)
	name : 'kmj';		O(값 재할당)

3) const : 변수 중복 선언이 불가능하고 반드시 선언과 초기화를 동시에 해야한다.
- 값 재할당도 불가능하다.

EX) 	const name;		X(초기화를 하지 않음)
	const name = 'kmj';	O(초기화 함)

★ 	웬만하면 var 키워드 보다는 let과 const 키워드를 사용하길 권장하며
	기본적으로 let을 사용하고 변경하지 않는 값(상수) 라면 const 키워드를
	사용하는 것이 안전하다.

★ 숫자형과 문자형을 섞어 사용하면 문자형으로 바뀜
EX)	const a = "나는";
	const b = "입니다.";
	const age = 30;

	console.log(a + age + '살' + b); 		결과) "나는 30살 입니다." 


2. alert()
- 경고창을 띄우는 함수


3. typeof 연산자
- 변수의 타입을 알아내기 위해 사용


4. prompt()
- 입력을 받는 함수
- 입력창이 나오고 변수에 값을 넣어줌

EX) 	const name = prompt("이름을 입력하세요.");
	alert("환영합니다." + name + "님");

	결과) 	입력창에서 이름을 입력하세요 글과 함께 입력칸이 나오고 입력 후 확인을 누르면
			환영합니다. ${name} 님 문장이 적힌 경고창이 나온다.

- 두개의 인수를 받을 경우 뒤의 인수가 디폴트 값이 된다.
- 입력할 내용에 대해 안내해줄 때 사용


5. confirm()
- 확인과 취소로서 boolean 값 반환
- 사용자에게 선택 확인, 종료 확인 등의 질문 작업을 실행할 때 좋다.
- 하지만 스타일링이 불가능하기 때문에 따로 만들어주어 사용하기도 한다.


